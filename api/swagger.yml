openapi: 3.0.0
info:
  version: "1.0.0"
  title: API de Alumnos
  description: Documentación de la API de Alumnos de la materia 75.43 Introducción a Sistemas Distribuidos

servers:
  - url: http://localhost:8080/api
    description: Servidor de desarrollo

# Paths servidos por la aplicación
paths:
  /domains/{domain}:
    get:
      operationId: "api.domains.obtener_uno"
      tags:
        - "Domains"
      summary: "IP de un domain"
      description: "Obtiene una IP de un domain"
      parameters:
        - in: path
          name: domain
          required: true
          schema:
            type: string
          description: El domain del cual se quiere conocer su IP
      responses:
        200:
          description: "Operacion de lectura exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        404:
          description: 'Domain no encontrado'
  /domains/custom-domain:
    post:
      operationId: "api.domains.crear"
      tags:
        - "Domains"
      summary: "Alta de una custo domain"
      description: "Crea un custom domain"
      requestBody:
        required: true
        x-body-name: 'domain'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputDomain'
      responses:
        201:
          description: "Se creo el custom-domain correctamente"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        400:
          description: 'IP duplicada o falta un parametro'
  /domains/custom-domain/{domain}:
    put:
      operationId: "api.domains.agregar"
      tags:
        - "Domains"
      summary: "Agrega un custom-domain"
      description: "Agrega una custom-domain"
      parameters:
        - in: path
          name: domain
          required: true
          schema:
            type: string
          description: Domain al cual se quiere agregar un custom-domain
      requestBody:
        required: true
        x-body-name: 'domain'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputDomain'
      responses:
        200:
          description: "Se agrego un custom-domain correctamente"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        404:
          description: "El dominio no existe"
        400:
          description: "Cuerpo mal formado"
    delete:
      operationId: "api.domains.borrar"
      tags:
        - "Domains"
      summary: "Borrar un custom domain"
      description: "Borra, si existe, un custom domain"
      parameters:
        - in: path
          name: domain
          required: true
          schema:
            type: string
          description: "El nombre del domain que se quiere borrar"
      responses:
        200:
          description: "Operación de borrado exitosa"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDomain'
        404:
          description: "Domain no encontrado"
  /custom-domain:
    get:
      operationId: api.domains.query_custom_domain
      tags:
        - "Domains"
      summary: "Resumen"
      description: "Descripcion"
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: "dominio a buscar"
          required: false
      responses:
        200:
            description: ""
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDomain'

  # /alumnos:
  #   get:
  #     operationId: "api.alumnos.obtener_todos"
  #     tags:
  #       - "Alumnos"
  #     summary: "Colección de alumnos de la materia"
  #     description: "Obtiene la lista de todos los alumnos de la materia existentes en el sistema"
  #     responses:
  #       200:
  #         description: "Operación de lectura exitosa"
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Alumno'
  #   post:
  #     operationId: "api.alumnos.crear"
  #     tags:
  #       - "Alumnos"
  #     summary: "Alta de un alumno de la materia"
  #     description: "Crea un nuevo alumno y lo agrega a la lista de alumnos de la materia"
  #     requestBody:
  #       required: true
  #       x-body-name: 'alumno'
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/InputAlumno'
  #     responses:
  #       201:
  #         description: "Se creo el alumno correctamente"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Alumno'
  #       400:
  #         description: "DNI o padron duplicado"
  # /alumnos/{id_alumno}:
  #   get:
  #     operationId: "api.alumnos.obtener_uno"
  #     tags:
  #       - "Alumnos"
  #     summary: "Alumno de la materia"
  #     description: "Obtiene un alumno particular de la materia"
  #     parameters:
  #       - in: path
  #         name: id_alumno
  #         required: true
  #         schema:
  #           type: integer
  #         description: El id del usuario a obtener
  #     responses:
  #       200:
  #         description: "Operación de lectura exitosa"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Alumno'
  #       404:
  #         description: "Alumno no encontrado"
  #   delete:
  #     operationId: "api.alumnos.borrar"
  #     tags:
  #       - "Alumnos"
  #     summary: "Borrar alumno de la materia"
  #     description: "Borra un alumno de la materia"
  #     parameters:
  #       - in: path
  #         name: id_alumno
  #         required: true
  #         schema:
  #           type: integer
  #         description: El id del usuario a borrar
  #     responses:
  #       204:
  #         description: "Operación de lectura exitosa"
  #       404:
  #         description: "Alumno no encontrado"
# Declaración de tipos de datos
components:
  schemas:
    Domain:
      type: "object"
      properties:
        domain:
          type: "string"
        ip:
          type: "string"
        custom:
          type: "boolean"
    InputDomain:
      type: "object"
      properties:
          domain:
            type: "string"
          ip:
            type: "string"
    ResponseDomain:
      type: "object"
      properties:
          domain:
            type: "string"
    # Alumno:
    #   type: "object"
    #   properties:
    #     id:
    #       type: "number"
    #     nombre:
    #       type: "string"
    #     dni:
    #       type: "string"
    #     padron:
    #       type: "string"
    # InputAlumno:
    #   type: "object"
    #   properties:
    #     nombre:
    #       type: "string"
    #     dni:
    #       type: "string"
    #     padron:
    #       type: "string"
    # Error:
    #   type: "object"
    #   properties:
    #     codigo:
    #       type: "number"
    #     mensaje:
    #       type: "string"
